services:
  composer:
    image: composer:2
    working_dir: /app
    command: composer install --no-interaction --prefer-dist --no-progress
    volumes:
      - .:/app

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - .:/var/www/html
      - ./vendor:/var/www/html/vendor
    depends_on:
      composer:
        condition: service_completed_successfully
      database:
        condition: service_started
      redis:
        condition: service_started
    env_file:
      - .env
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: php -S 0.0.0.0:8080 -t /var/www/html/src

  database:
    image: postgres:15-alpine
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - database_volume:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_volume:/data

volumes:
  database_volume:
  redis_volume:
